[{"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\index.js":"1","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\App.js":"2","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\pages\\write.js":"4","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\pages\\list.js":"5","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\component\\InputItem.js":"6","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\component\\top.js":"7","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\pages\\main.js":"8","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\component\\startbutton.js":"9","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\GlobalStyle.js":"10","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\ThemeMenu.js":"11"},{"size":539,"mtime":1645986432042,"results":"12","hashOfConfig":"13"},{"size":714,"mtime":1646042700406,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1638251407798,"results":"15","hashOfConfig":"13"},{"size":10666,"mtime":1645995477993,"results":"16","hashOfConfig":"13"},{"size":1670,"mtime":1645991405225,"results":"17","hashOfConfig":"13"},{"size":3273,"mtime":1645996878808,"results":"18","hashOfConfig":"13"},{"size":3618,"mtime":1645990722964,"results":"19","hashOfConfig":"13"},{"size":1211,"mtime":1645995300255,"results":"20","hashOfConfig":"13"},{"size":915,"mtime":1645992934431,"results":"21","hashOfConfig":"13"},{"size":1298,"mtime":1645994334511,"results":"22","hashOfConfig":"13"},{"size":5178,"mtime":1645990875658,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"eq5czv",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\index.js",[],["48","49"],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\App.js",[],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\pages\\write.js",["50","51"],"import React, { forwardRef, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TopBanner from \"../component/top\";\nimport styled from \"styled-components\";\n\nconst happys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\nconst angrys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\nconst sads = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\nconst joys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n\nexport default function WritePage(){\n\n    const [input, setInput] = useState([]);\n\n    const [date, setDate] = useState(new Date());\n    const [happy, setHappy] = useState(\"0\");\n    const [angry, setAngry] = useState(\"0\");\n    const [sad, setSad] = useState(\"0\");\n    const [joy, setJoy] = useState(\"0\");\n    const [saveTitle, setSaveTitle] = useState(\"\");\n    const [saveBody, setSaveBody] = useState(\"\");\n    \n    const CustomInput=forwardRef(({value, onClick}, ref)=>(\n        <button\n            className=\"custom-input\"\n            onClick={onClick}\n            ref={ref}>\n                {value}\n            </button>\n    ));\n\n    const onSaveClick = () => {\n        axios.post('/api/write', {\n            happy: happy,\n            angry: angry,\n            sad: sad,\n            joy: joy,\n            date: date,\n            title: saveTitle,\n            body : saveBody\n        })\n        .then(() => axios.get('/api/write'))\n        .then(response => {\n            setInput(response.data);\n            setHappy(\"0\");\n            setAngry(\"0\");\n            setSad(\"0\");\n            setJoy(\"0\");\n            setDate(new Date());\n            setSaveTitle(\"\");\n            setSaveBody(\"\");\n            console.log(response.data)\n         })\n        alert('저장하시겠습니까?');\n    };\n\n\n    return (\n        <div>\n            <WriteStyled>\n            <TopBanner />\n            <div className=\"WritePage\">\n                \n                <div className=\"intro\">\n                    <h1 className=\"intro-item1\">오늘 하루는 어땠나요?</h1>\n                    <h2 className=\"intro-item2\">각각의 감정을 느낀 정도를 숫자를 통해 표현해보세요.</h2>\n                </div>\n\n                <div className=\"InputSection\">\n                    <div className=\"date\">\n                        <p className=\"date-text\">날짜:</p>\n                        <ReactDatePicker\n                            showPopperArrow={false}\n                            dateFormat={\"yyyy년 MM월 dd일\"}\n                            maxDate={new Date()}\n                            selected={date}\n                            onChange={(date)=>setDate(date)}\n                            customInput={<CustomInput />}\n                       />\n                    </div>\n                    \n\n                    <div className=\"emotion-item\">\n                        <label className=\"chinese\"> 喜 </label>\n                        <label className=\"korean\"> (희) </label>\n                        {happys.map(f => (\n                        <>\n                        <input\n\n                            type=\"radio\"\n                            name=\"happy\"\n                            value={f}\n                            checked={happy===f}\n                            onChange={e=>setHappy(e.currentTarget.value)}\n                        />{\"\"}\n                        {f}\n                        </>    \n                        ))}\n                    </div>\n\n                    <div className=\"emotion-item\">\n                        <label className=\"chinese\"> 怒 </label>\n                        <label className=\"korean\"> (노) </label>\n                        {angrys.map(f => (\n                        <>\n                            <input\n                                className=\"radiobutton\"\n                                type=\"radio\"\n                                name=\"angry\"\n                                value={f}\n                                checked={angry===f}\n                                onChange={e=>setAngry(e.currentTarget.value)}\n                            />{\"\"}\n                            {f}\n                        </>    \n                        ))}\n                    </div>\n\n                    <div className=\"emotion-item\">\n                        <label className=\"chinese\"> 哀 </label>\n                        <label className=\"korean\"> (애) </label>\n                        {sads.map(f => (\n                        <>\n                            <input\n                                type=\"radio\"\n                                name=\"sad\"\n                                value={f}\n                                checked={sad===f}\n                                onChange={e=>setSad(e.currentTarget.value)}\n                            />{\"\"}\n                            {f}\n                        </>    \n                        ))}\n                    </div>\n\n                    <div className=\"emotion-item\">\n                        <label className=\"chinese\"> 樂 </label>\n                        <label className=\"korean\"> (락) </label>\n                        {joys.map(f => (\n                        <>\n                            <input\n                                type=\"radio\"\n                                name=\"joy\"\n                                value={f}\n                                checked={joy===f}\n                                onChange={e=>setJoy(e.currentTarget.value)}\n                        />{\"\"}\n                        {f}\n                        </>    \n                        ))}\n                    </div>\n                </div>\n                \n                <textarea\n                    className=\"Title\"\n                    placeholder=\"제목을 입력하세요.\"\n                    value={saveTitle}\n                    onChange={v=>setSaveTitle(v.target.value)}\n                    required/>\n                <textarea\n                    className=\"Body\"\n                    placeholder=\"내용을 입력하세요.\"\n                    value={saveBody}\n                    onChange={v=>setSaveBody(v.target.value)}\n                    required/>\n                <div className=\"SaveButton-Section\">\n                    <button onClick={()=>onSaveClick()} className=\"SaveButton\">저장</button>\n            </div>\n                \n                \n        </div>\n        </WriteStyled>\n        </div>\n    );\n\n}\n\nconst WriteStyled = styled.div`\n    .WritePage{\n        width: 100%;\n        height: 1000px;\n        align-items: center;\n        justify-content:space-evenly;\n        display: flex;\n        flex-direction: column;\n\n        .intro{\n            width: 70%;\n            margin-top: 50px;\n            .intro-item1{\n                font-family: 'Noto Serif Korean';\n                margin-bottom: 10px;\n                color: var(--text);\n            }\n            .intro-item2{\n                font-family: 'Noto Serif Korean';\n                margin-bottom: 50px;\n                color: var(--text);\n            }\n        }\n\n        .InputSection{\n            width:70%;\n            .date{\n                width: 100%;\n                display: flex;\n                justify-content: flex-end;\n                align-items: center;\n                margin-bottom: 0px;\n                \n                .date-text{\n                    text-decoration: none;\n                    font-family: 'Noto Serif Korean';\n                    font-size: 20px;\n                    width: 100px;\n                    height: 100%;\n                    margin-right: 20px;        \n                    margin-bottom: 30px;\n                    color: var(--text);\n                }\n            .custom-input{\n                background-color: var(--sub1);\n                width: 220px;\n                border: none;\n                border-radius: 10px;\n                padding: 10px;\n                font-family: 'Noto Serif Korean';\n                font-size: 20px;\n                margin-left: 40px;\n                margin-bottom: 30px;\n                cursor: pointer;     \n                color: var(--text);       \n            }\n            }\n        }\n        .emotion-item{\n            margin: auto;\n            font-family: 'Noto Serif Korean';\n            font-size: 20px;\n            align-items: center;\n            color: var(--text);\n\n            .chinese{\n                font-family: 'chinese';\n                font-size: 20px;            \n            }\n\n            .korean{\n                font-family: 'Noto Serif Korean';\n                font-size: 20px;\n                margin-right: 50px;            \n            }\n        }\n        .emotion-item input{\n            margin: 0px 30px;        \n        }   \n        .Title{\n            width:70%;\n            height: 60px;\n            margin: 30px auto;\n            resize: none;\n            border-radius: 10px;\n            font-size: 15px;\n            line-height: 40px;\n            text-indent: 20px;  \n            background-color: var(--bg);  \n            border: 2px solid var(--sub1);    \n        }\n\n        .Body{\n            width: 70%;\n            height: 500px;\n            margin: 15px auto;\n            resize: none;\n            border-radius: 10px;\n            font-size: 15px;\n            line-height: 45px;\n            text-indent: 20px;    \n            background-color: var(--bg);      \n            border: 2px solid var(--sub1);    \n        }\n\n        textarea::placeholder{\n            line-height: 40px;\n            text-indent: 20px;\n        }\n        textarea::focus{\n            outline: border: 2px solid var(--sub2);  \n        }\n\n        .SaveButton-Section{\n            width: 70%;\n            display: flex;\n            justify-content: flex-end;\n\n            .SaveButton{\n                width: 100px;\n                border-radius: 10px; \n                border: none;\n                color: var(--text);\n                background-color: var(--sub2);\n                text-decoration: none;\n                font-family: 'Noto Serif Korean';\n                font-size: 20px;\n                margin-top: 20px;\n                cursor: pointer;\n                margin-bottom: 50px;\n                padding: 5px 20px;\n            }\n            .SaveButton:hover{\n                width: 100px;\n                border-radius: 10px; \n                border: none;\n                color: var(--sub2);\n                background-color: var(--bg);\n                text-decoration: none;\n                font-family: 'Noto Serif Korean';\n                font-size: 20px;\n                margin-top: 20px;\n                cursor: pointer;\n                margin-bottom: 50px;\n            }\n\n        }\n    }\n`;","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\pages\\list.js",[],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\component\\InputItem.js",[],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\component\\top.js",[],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\pages\\main.js",[],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\component\\startbutton.js",[],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\GlobalStyle.js",[],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\ThemeMenu.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":29,"nodeType":"58","messageId":"59","endLine":1,"endColumn":38},{"ruleId":"56","severity":1,"message":"60","line":15,"column":12,"nodeType":"58","messageId":"59","endLine":15,"endColumn":17},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'input' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]