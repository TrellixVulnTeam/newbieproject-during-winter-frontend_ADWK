[{"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\index.js":"1","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\App.js":"2","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\pages\\write.js":"4","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\pages\\list.js":"5","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\component\\InputItem.js":"6","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\component\\top.js":"7","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\component\\gotowrite.js":"8","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\pages\\main.js":"9"},{"size":500,"mtime":1638251407506,"results":"10","hashOfConfig":"11"},{"size":602,"mtime":1645887815944,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1638251407798,"results":"13","hashOfConfig":"11"},{"size":5686,"mtime":1645887491161,"results":"14","hashOfConfig":"11"},{"size":1489,"mtime":1645887482085,"results":"15","hashOfConfig":"11"},{"size":694,"mtime":1645116329213,"results":"16","hashOfConfig":"11"},{"size":643,"mtime":1645890883060,"results":"17","hashOfConfig":"11"},{"size":302,"mtime":1638468251834,"results":"18","hashOfConfig":"11"},{"size":311,"mtime":1645887778666,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"eq5czv",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\index.js",[],["40","41"],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\App.js",[],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\pages\\write.js",["42"],"import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport './write.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst happys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\r\nconst angrys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\r\nconst sads = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\r\nconst joys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\r\n\r\nexport default function WritePage(){\r\n\r\n    const [input, setInput] = useState([]);\r\n\r\n    const [date, setDate] = useState(new Date());\r\n    const [happy, setHappy] = useState(\"0\");\r\n    const [angry, setAngry] = useState(\"0\");\r\n    const [sad, setSad] = useState(\"0\");\r\n    const [joy, setJoy] = useState(\"0\");\r\n    const [saveTitle, setSaveTitle] = useState(\"\");\r\n    const [saveBody, setSaveBody] = useState(\"\");\r\n    \r\n    const onSaveClick = () => {\r\n        axios.post('/api/write', {\r\n            date: date,\r\n            happy: happy,\r\n            angry: angry,\r\n            sad: sad,\r\n            joy: joy,\r\n            title: saveTitle,\r\n            body : saveBody\r\n        })\r\n        .then(() => axios.get('/api/write'))\r\n        .then(response => {\r\n            setInput(response.data);\r\n            setDate(\"\");\r\n            setHappy(\"0\");\r\n            setAngry(\"0\");\r\n            setSad(\"0\");\r\n            setJoy(\"0\");\r\n            setSaveTitle(\"\");\r\n            setSaveBody(\"\");\r\n            console.log(response.data)\r\n         })\r\n        alert('저장하시겠습니까?');\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1 className=\"intro1\">오늘 하루는 어땠나요?</h1>\r\n                <h2 className=\"intro2\">각각의 감정을 느낀 정도를 숫자를 통해 표현해보세요.</h2>\r\n            </div>\r\n            <div className=\"Entire\">\r\n                <label className=\"date\"> 날짜: </label>\r\n                <ReactDatePicker\r\n                    dateFormat=\"yyyy년 MM월 dd일\"\r\n                    value={date}\r\n                    onChange={v => setDate(v.target.value)}\r\n                    required/>\r\n\r\n                <span className=\"happy\">\r\n                    <label className=\"chinese1\"> 喜 </label>\r\n                    <label className=\"korean\"> (희) </label>\r\n                    {happys.map(f => (\r\n                    <>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"happy\"\r\n                            value={f}\r\n                            checked={happy===f}\r\n                            onChange={e=>setHappy(e.currentTarget.value)}\r\n                        />{\" \"}\r\n                        {f}\r\n                    </>    \r\n                    ))}\r\n                </span>\r\n                <span className=\"angry\">\r\n                    <label className=\"chinese\"> 怒 </label>\r\n                    <label className=\"korean\"> (노) </label>\r\n                    {angrys.map(f => (\r\n                    <>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"angry\"\r\n                            value={f}\r\n                            checked={angry===f}\r\n                            onChange={e=>setAngry(e.currentTarget.value)}\r\n                        />{\" \"}\r\n                        {f}\r\n                    </>    \r\n                    ))}\r\n                </span>\r\n                <br />\r\n                <span className=\"sad\">\r\n                    <label className=\"chinese\"> 哀 </label>\r\n                    <label className=\"korean\"> (애) </label>\r\n                    {sads.map(f => (\r\n                    <>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"sad\"\r\n                            value={f}\r\n                            checked={sad===f}\r\n                            onChange={e=>setSad(e.currentTarget.value)}\r\n                        />{\" \"}\r\n                        {f}\r\n                    </>    \r\n                    ))}\r\n                </span>\r\n                <span className=\"joy\">\r\n                    <label className=\"chinese\"> 樂 </label>\r\n                    <label className=\"korean\"> (락) </label>\r\n                    {joys.map(f => (\r\n                    <>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"joy\"\r\n                            value={f}\r\n                            checked={joy===f}\r\n                            onChange={e=>setJoy(e.currentTarget.value)}\r\n                        />{\" \"}\r\n                        {f}\r\n                    </>    \r\n                    ))}\r\n                </span>\r\n        </div>\r\n                <br />\r\n                <textarea\r\n                    className=\"Title\"\r\n                    placeholder=\"제목을 입력하세요.\"\r\n                    value={saveTitle}\r\n                    onChange={v=>setSaveTitle(v.target.value)}\r\n                    required/>\r\n                <br />\r\n                <textarea\r\n                    className=\"Body\"\r\n                    placeholder=\"내용을 입력하세요.\"\r\n                    value={saveBody}\r\n                    onChange={v=>setSaveBody(v.target.value)}\r\n                    required/>\r\n                <br />\r\n                <button\r\n                    className=\"SaveButton\"\r\n                    onClick={()=>onSaveClick()}>저장</button>\r\n                <div>\r\n                <Link to=\"/list\">\r\n                    <button className=\"listbutton\">지난 일기 보기</button>   \r\n                </Link>\r\n                </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\pages\\list.js",[],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\component\\InputItem.js",[],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\component\\top.js",[],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\component\\gotowrite.js",[],"C:\\Users\\user\\Desktop\\newbieproject\\frontend\\newbieproject-during-winter-frontend\\src\\pages\\main.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":15,"column":12,"nodeType":"49","messageId":"50","endLine":15,"endColumn":17},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'input' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]