{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { setToLS, getFromLS } from '../utils/storage';\nimport _ from 'lodash';\nexport const useTheme = () => {\n  _s();\n\n  const themes = getFromLS('all-themes');\n  const [theme, setTheme] = useState(themes.data.light);\n  const [themeLoaded, setThemeLoaded] = useState(false);\n\n  const setMode = mode => {\n    setToLS('theme', mode);\n    setTheme(mode);\n  };\n\n  const getFonts = () => {\n    const allFonts = _.values(_.mapValues(themes.data, 'font'));\n\n    return allFonts;\n  };\n\n  useEffect(() => {\n    const localTheme = getFromLS('theme');\n    localTheme ? setTheme(localTheme) : setTheme(themes.data.light);\n    setThemeLoaded(true);\n  }, []);\n  return {\n    theme,\n    themeLoaded,\n    setMode,\n    getFonts\n  };\n};\n\n_s(useTheme, \"ApFPfNNtePxoOwJLQAVXHHPzK2s=\");","map":{"version":3,"sources":["C:/Users/user/Desktop/newbieproject/frontend/newbieproject-during-winter-frontend/src/theme/useTheme.js"],"names":["useEffect","useState","setToLS","getFromLS","_","useTheme","themes","theme","setTheme","data","light","themeLoaded","setThemeLoaded","setMode","mode","getFonts","allFonts","values","mapValues","localTheme"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,kBAAnC;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAMC,MAAM,GAAGH,SAAS,CAAC,YAAD,CAAxB;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACK,MAAM,CAACG,IAAP,CAAYC,KAAb,CAAlC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMY,OAAO,GAAGC,IAAI,IAAI;AACtBZ,IAAAA,OAAO,CAAC,OAAD,EAAUY,IAAV,CAAP;AACAN,IAAAA,QAAQ,CAACM,IAAD,CAAR;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMC,QAAQ,GAAGZ,CAAC,CAACa,MAAF,CAASb,CAAC,CAACc,SAAF,CAAYZ,MAAM,CAACG,IAAnB,EAAyB,MAAzB,CAAT,CAAjB;;AACA,WAAOO,QAAP;AACD,GAHD;;AAKAhB,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMmB,UAAU,GAAGhB,SAAS,CAAC,OAAD,CAA5B;AACAgB,IAAAA,UAAU,GAAGX,QAAQ,CAACW,UAAD,CAAX,GAA0BX,QAAQ,CAACF,MAAM,CAACG,IAAP,CAAYC,KAAb,CAA5C;AACAE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAO;AAAEL,IAAAA,KAAF;AAASI,IAAAA,WAAT;AAAsBE,IAAAA,OAAtB;AAA+BE,IAAAA;AAA/B,GAAP;AACD,CAtBM;;GAAMV,Q","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { setToLS, getFromLS } from '../utils/storage';\r\nimport _ from 'lodash';\r\n\r\nexport const useTheme = () => {\r\n  const themes = getFromLS('all-themes');\r\n  const [theme, setTheme] = useState(themes.data.light);\r\n  const [themeLoaded, setThemeLoaded] = useState(false);\r\n\r\n  const setMode = mode => {\r\n    setToLS('theme', mode)\r\n    setTheme(mode);\r\n  };\r\n\r\n  const getFonts = () => {\r\n    const allFonts = _.values(_.mapValues(themes.data, 'font'));\r\n    return allFonts;\r\n  }\r\n\r\n  useEffect(() =>{\r\n    const localTheme = getFromLS('theme');\r\n    localTheme ? setTheme(localTheme) : setTheme(themes.data.light);\r\n    setThemeLoaded(true);\r\n  }, []);\r\n\r\n  return { theme, themeLoaded, setMode, getFonts };\r\n};"]},"metadata":{},"sourceType":"module"}