{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\newbieproject\\\\frontend\\\\newbieproject-during-winter-frontend\\\\src\\\\pages\\\\write.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport './write.css';\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TopBanner from \"../component/top\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst happys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\nconst angrys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\nconst sads = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\nconst joys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\nexport default function WritePage() {\n  _s();\n\n  const [input, setInput] = useState([]);\n  const [date, setDate] = useState(new Date());\n  const [happy, setHappy] = useState(\"0\");\n  const [angry, setAngry] = useState(\"0\");\n  const [sad, setSad] = useState(\"0\");\n  const [joy, setJoy] = useState(\"0\");\n  const [saveTitle, setSaveTitle] = useState(\"\");\n  const [saveBody, setSaveBody] = useState(\"\");\n\n  const onSaveClick = () => {\n    axios.post('/api/write', {\n      happy: happy,\n      angry: angry,\n      sad: sad,\n      joy: joy,\n      date: date,\n      title: saveTitle,\n      body: saveBody\n    }).then(() => axios.get('/api/write')).then(response => {\n      setInput(response.data);\n      setHappy(\"0\");\n      setAngry(\"0\");\n      setSad(\"0\");\n      setJoy(\"0\");\n      setDate(new Date());\n      setSaveTitle(\"\");\n      setSaveBody(\"\");\n      console.log(response.data);\n    });\n    alert('저장하시겠습니까?');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WritePage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"intro\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"intro-item1\",\n          children: \"\\uC624\\uB298 \\uD558\\uB8E8\\uB294 \\uC5B4\\uB560\\uB098\\uC694?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"intro-item2\",\n          children: \"\\uAC01\\uAC01\\uC758 \\uAC10\\uC815\\uC744 \\uB290\\uB080 \\uC815\\uB3C4\\uB97C \\uC22B\\uC790\\uB97C \\uD1B5\\uD574 \\uD45C\\uD604\\uD574\\uBCF4\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InputSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date-text\",\n            children: \"\\uB0A0\\uC9DC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ReactDatePicker, {\n            showPopperArrow: false,\n            dateFormat: \"yyyy년 MM월 dd일\",\n            maxDate: new Date(),\n            selected: date,\n            onChange: date => setDate(date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emotion-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"chinese\",\n            children: \" \\u559C \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"korean\",\n            children: \" (\\uD76C) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), happys.map(f => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"happy\",\n              value: f,\n              checked: happy === f,\n              onChange: e => setHappy(e.currentTarget.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), \" \", f]\n          }, void 0, true))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emotion-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"chinese\",\n            children: \" \\u6012 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"korean\",\n            children: \" (\\uB178) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), angrys.map(f => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"angry\",\n              value: f,\n              checked: angry === f,\n              onChange: e => setAngry(e.currentTarget.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), \" \", f]\n          }, void 0, true))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emotion-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"chinese\",\n            children: \" \\u54C0 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"korean\",\n            children: \" (\\uC560) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), sads.map(f => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"sad\",\n              value: f,\n              checked: sad === f,\n              onChange: e => setSad(e.currentTarget.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this), \" \", f]\n          }, void 0, true))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emotion-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"chinese\",\n            children: \" \\uF95C \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"korean\",\n            children: \" (\\uB77D) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), joys.map(f => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"joy\",\n              value: f,\n              checked: joy === f,\n              onChange: e => setJoy(e.currentTarget.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this), \" \", f]\n          }, void 0, true))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"Title\",\n        placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n        value: saveTitle,\n        onChange: v => setSaveTitle(v.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"Body\",\n        placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n        value: saveBody,\n        onChange: v => setSaveBody(v.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SaveButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onSaveClick(),\n          children: \"\\uC800\\uC7A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WritePage, \"L/NK3CSXvTnp39pUac+lRYltOig=\");\n\n_c = WritePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"WritePage\");","map":{"version":3,"sources":["C:/Users/user/Desktop/newbieproject/frontend/newbieproject-during-winter-frontend/src/pages/write.js"],"names":["React","useState","axios","ReactDatePicker","TopBanner","happys","angrys","sads","joys","WritePage","input","setInput","date","setDate","Date","happy","setHappy","angry","setAngry","sad","setSad","joy","setJoy","saveTitle","setSaveTitle","saveBody","setSaveBody","onSaveClick","post","title","body","then","get","response","data","console","log","alert","map","f","e","currentTarget","value","v","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios';\nimport './write.css';\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TopBanner from \"../component/top\";\n\nconst happys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\nconst angrys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\nconst sads = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\nconst joys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n\nexport default function WritePage(){\n\n    const [input, setInput] = useState([]);\n\n    const [date, setDate] = useState(new Date());\n    const [happy, setHappy] = useState(\"0\");\n    const [angry, setAngry] = useState(\"0\");\n    const [sad, setSad] = useState(\"0\");\n    const [joy, setJoy] = useState(\"0\");\n    const [saveTitle, setSaveTitle] = useState(\"\");\n    const [saveBody, setSaveBody] = useState(\"\");\n    \n    const onSaveClick = () => {\n        axios.post('/api/write', {\n            happy: happy,\n            angry: angry,\n            sad: sad,\n            joy: joy,\n            date: date,\n            title: saveTitle,\n            body : saveBody\n        })\n        .then(() => axios.get('/api/write'))\n        .then(response => {\n            setInput(response.data);\n            setHappy(\"0\");\n            setAngry(\"0\");\n            setSad(\"0\");\n            setJoy(\"0\");\n            setDate(new Date());\n            setSaveTitle(\"\");\n            setSaveBody(\"\");\n            console.log(response.data)\n         })\n        alert('저장하시겠습니까?');\n    };\n\n\n    return (\n        <div>\n            <TopBanner />\n            <div className=\"WritePage\">\n                <div className=\"intro\">\n                    <h1 className=\"intro-item1\">오늘 하루는 어땠나요?</h1>\n                    <h2 className=\"intro-item2\">각각의 감정을 느낀 정도를 숫자를 통해 표현해보세요.</h2>\n                </div>\n\n                <div className=\"InputSection\">\n                    <div className=\"date\">\n                        <p className=\"date-text\">날짜:</p>\n                        <ReactDatePicker\n                            showPopperArrow={false}\n                            dateFormat={\"yyyy년 MM월 dd일\"}\n                            maxDate={new Date()}\n                            selected={date}\n                            onChange={(date)=>setDate(date)}\n                        />\n                    </div>\n                    \n\n                <div className=\"emotion-item\">\n                    <label className=\"chinese\"> 喜 </label>\n                    <label className=\"korean\"> (희) </label>\n                    {happys.map(f => (\n                    <>\n                        <input\n                            type=\"radio\"\n                            name=\"happy\"\n                            value={f}\n                            checked={happy===f}\n                            onChange={e=>setHappy(e.currentTarget.value)}\n                        />{\" \"}\n                        {f}\n                    </>    \n                    ))}\n                </div>\n                <div className=\"emotion-item\">\n                    <label className=\"chinese\"> 怒 </label>\n                    <label className=\"korean\"> (노) </label>\n                    {angrys.map(f => (\n                    <>\n                        <input\n                            type=\"radio\"\n                            name=\"angry\"\n                            value={f}\n                            checked={angry===f}\n                            onChange={e=>setAngry(e.currentTarget.value)}\n                        />{\" \"}\n                        {f}\n                    </>    \n                    ))}\n                </div>\n                <div className=\"emotion-item\">\n                    <label className=\"chinese\"> 哀 </label>\n                    <label className=\"korean\"> (애) </label>\n                    {sads.map(f => (\n                    <>\n                        <input\n                            type=\"radio\"\n                            name=\"sad\"\n                            value={f}\n                            checked={sad===f}\n                            onChange={e=>setSad(e.currentTarget.value)}\n                        />{\" \"}\n                        {f}\n                    </>    \n                    ))}\n                </div>\n                <div className=\"emotion-item\">\n                    <label className=\"chinese\"> 樂 </label>\n                    <label className=\"korean\"> (락) </label>\n                    {joys.map(f => (\n                    <>\n                        <input\n                            type=\"radio\"\n                            name=\"joy\"\n                            value={f}\n                            checked={joy===f}\n                            onChange={e=>setJoy(e.currentTarget.value)}\n                        />{\" \"}\n                        {f}\n                    </>    \n                    ))}\n                </div>\n            </div>\n                <textarea\n                    className=\"Title\"\n                    placeholder=\"제목을 입력하세요.\"\n                    value={saveTitle}\n                    onChange={v=>setSaveTitle(v.target.value)}\n                    required/>\n                <textarea\n                    className=\"Body\"\n                    placeholder=\"내용을 입력하세요.\"\n                    value={saveBody}\n                    onChange={v=>setSaveBody(v.target.value)}\n                    required/>\n                <div className=\"SaveButton\">\n                    <button onClick={()=>onSaveClick()}>저장</button>\n                </div>\n                \n                \n        </div>\n        </div>\n    );\n\n                    }"]},"metadata":{},"sourceType":"module"}